import { BlockExplorerStandard, BlockExplorerType, EndpointAuth, EndpointType } from '../enums'
import { type Network } from '../types'

import {
    alchemy,
    ankr,
    arbitrumProvider,
    blast,
    blockpi,
    infura,
    omnia,
    onerpc,
    pokt,
} from '../providers'

export const arbitrumOne = {
    id: 42161,
    name: 'Arbitrum One',
    network: 'arbitrumOne',
    infoUrl: 'https://arbitrum.io',
    docsUrl: 'https://developer.arbitrum.io/public-chains',
    eipUrl: 'https://github.com/ethereum-lists/chains/blob/master/_data/chains/eip155-42161.json',
    nativeCurrency: {
        name: 'Ether',
        symbol: 'ETH',
        uSymbol: 'Wei',
        decimals: 18,
    },
    rpcNodes: {
        alchemy: {
            rpcNode: 'alchemy',
            type: EndpointType.Authenticated,
            http: [`https://arb-mainnet.g.alchemy.com/v2/${EndpointAuth.Key}`],
            wss: [`wss://arb-mainnet.g.alchemy.com/v2/${EndpointAuth.Key}`],
            provider: alchemy,
        },
        infura: {
            rpcNode: 'infura',
            type: EndpointType.Authenticated,
            http: [`https://arbitrum-mainnet.infura.io/v3/${EndpointAuth.Key}`],
            provider: infura,
        },
        pokt: {
            rpcNode: 'pokt',
            type: EndpointType.Authenticated,
            http: [`https://arbitrum-one.gateway.pokt.network/v1/lb/${EndpointAuth.Key}`],
            provider: pokt,
        },
        poktPublic: {
            rpcNode: 'poktPublic',
            type: EndpointType.Public,
            http: ['https://arbitrum-rpc.gateway.pokt.network'],
            provider: pokt,
        },
        ankr: {
            rpcNode: 'ankr',
            type: EndpointType.Authenticated,
            http: [`https://rpc.ankr.com/arbitrum/${EndpointAuth.Key}`],
            provider: ankr,
        },
        ankrPublic: {
            rpcNode: 'ankrPublic',
            type: EndpointType.Public,
            http: ['https://rpc.ankr.com/arbitrum'],
            provider: ankr,
        },
        blast: {
            rpcNode: 'blast',
            type: EndpointType.Authenticated,
            http: [`https://arbitrum-one.blastapi.io/${EndpointAuth.Key}`],
            wss: [`wss://arbitrum-one.blastapi.io/${EndpointAuth.Key}`],
            provider: blast,
        },
        blastPublic: {
            rpcNode: 'blastPublic',
            type: EndpointType.Public,
            http: ['https://arbitrum-one.public.blastapi.io'],
            wss: ['wss://arbitrum-one.public.blastapi.io'],
            provider: blast,
        },
        blockpi: {
            rpcNode: 'blockpi',
            type: EndpointType.Authenticated,
            http: [`https://arbitrum.blockpi.network/v1/rpc/${EndpointAuth.Key}`],
            wss: [`wss://arbitrum.blockpi.network/v1/ws/${EndpointAuth.Key}`],
            provider: blockpi,
        },
        blockpiPublic: {
            rpcNode: 'blockpiPublic',
            type: EndpointType.Public,
            http: ['https://arbitrum.blockpi.network/v1/rpc/public'],
            provider: blockpi,
        },
        onerpc: {
            rpcNode: 'onerpc',
            type: EndpointType.Public,
            http: ['https://1rpc.io/arb'],
            provider: onerpc,
        },
        omnia: {
            rpcNode: 'omnia',
            type: EndpointType.Authenticated,
            http: [`https://endpoints.omniatech.io/v1/arbitrum/one/${EndpointAuth.Key}`],
            wss: [`wss://endpoints.omniatech.io/v1/arbitrum/one/${EndpointAuth.Key}`],
            provider: omnia,
        },
        omniaPublic: {
            rpcNode: 'omniaPublic',
            type: EndpointType.Public,
            http: ['https://endpoints.omniatech.io/v1/arbitrum/one/public'],
            provider: omnia,
        },
        arbitrum: {
            rpcNode: 'arbitrum',
            type: EndpointType.Public,
            http: ['https://arb1.arbitrum.io/rpc'],
            provider: arbitrumProvider,
        },
        public: {
            rpcNode: 'public',
            type: EndpointType.Public,
            http: ['https://arb1.arbitrum.io/rpc'],
            provider: arbitrumProvider,
        },
        default: {
            rpcNode: 'default',
            type: EndpointType.Public,
            http: ['https://arb1.arbitrum.io/rpc'],
            provider: arbitrumProvider,
        },
    },
    blockExplorers: {
        arbitrumExplorer: {
            name: 'Arbitrum Explorer',
            blockExplorer: 'arbitrumExplorer',
            type: BlockExplorerType.Blockscout,
            standard: BlockExplorerStandard.EIP3091,
            browserUrl: 'https://explorer.arbitrum.io',
        },
        arbiscan: {
            name: 'Arbiscan',
            blockExplorer: 'arbiscan',
            type: BlockExplorerType.Etherscan,
            standard: BlockExplorerStandard.EIP3091,
            browserUrl: 'https://arbiscan.io',
            apiUrl: 'https://api.arbiscan.io',
            docsUrl: 'https://docs.arbiscan.io',
        },
        default: {
            name: 'Arbiscan',
            blockExplorer: 'default',
            type: BlockExplorerType.Etherscan,
            standard: BlockExplorerStandard.EIP3091,
            browserUrl: 'https://arbiscan.io',
            apiUrl: 'https://api.arbiscan.io',
            docsUrl: 'https://docs.arbiscan.io',
        },
    },
    contracts: {
        multicall3: {
            name: 'Multicall V3',
            contract: 'multicall3',
            address: '0xca11bde05977b3631167028862be2a173976ca11',
            deployBlock: 7654707,
            deployTxHash: '0x211f6689adbb0f3fba7392e899d23bde029cef532cbd0ae900920cc09f7d1f32',
        },
    },
    testnet: false,
} as const satisfies Network
