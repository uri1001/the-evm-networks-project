import { BlockExplorerStandard, BlockExplorerType, EndpointAuth, EndpointType } from '../enums'
import { type Network } from '../types'

import {
    alchemy,
    ankr,
    blast,
    blockpi,
    infura,
    lava,
    llama,
    omnia,
    onerpc,
    onfinality,
    pokt,
    polygonProvider,
    publicnode,
} from '../providers'

export const polygon = {
    id: 137,
    name: 'Polygon',
    network: 'polygon',
    infoUrl: 'https://polygon.technology',
    docsUrl: 'https://wiki.polygon.technology',
    eipUrl: 'https://github.com/ethereum-lists/chains/blob/master/_data/chains/eip155-137.json',
    nativeCurrency: {
        name: 'MATIC',
        symbol: 'MATIC',
        uSymbol: 'Wei',
        decimals: 18,
    },
    rpcNodes: {
        alchemy: {
            rpcNode: 'alchemy',
            type: EndpointType.Authenticated,
            http: [`https://polygon-mainnet.g.alchemy.com/v2/${EndpointAuth.Key}`],
            wss: [`wss://polygon-mainnet.g.alchemy.com/v2/${EndpointAuth.Key}`],
            provider: alchemy,
        },
        infura: {
            rpcNode: 'infura',
            type: EndpointType.Authenticated,
            http: [`https://polygon-mainnet.infura.io/v3/${EndpointAuth.Key}`],
            provider: infura,
        },
        lava: {
            rpcNode: 'lava',
            type: EndpointType.Authenticated,
            http: [`https://g.w.lavanet.xyz:443/gateway/polygon1/rpc-http/${EndpointAuth.Key}`],
            wss: [`wss://g.w.lavanet.xyz:443/gateway/polygon1/rpc/${EndpointAuth.Key}`],
            provider: lava,
        },
        pokt: {
            rpcNode: 'pokt',
            type: EndpointType.Authenticated,
            http: [
                `https://poly-mainnet.gateway.pokt.network/v1/lb/${EndpointAuth.Key}`,
                `https://poly-archival.gateway.pokt.network/v1/lb/${EndpointAuth.Key}`,
            ],
            provider: pokt,
        },
        poktPublic: {
            rpcNode: 'poktPublic',
            type: EndpointType.Public,
            http: ['https://poly-rpc.gateway.pokt.network'],
            provider: pokt,
        },
        blast: {
            rpcNode: 'blast',
            type: EndpointType.Authenticated,
            http: [`https://polygon-mainnet.blastapi.io/${EndpointAuth.Key}`],
            wss: [`wss://polygon-mainnet.blastapi.io/${EndpointAuth.Key}`],
            provider: blast,
        },
        blastPublic: {
            rpcNode: 'blastPublic',
            type: EndpointType.Public,
            http: ['https://polygon-mainnet.public.blastapi.io'],
            wss: ['wss://polygon-mainnet.public.blastapi.io'],
            provider: blast,
        },
        blockpi: {
            rpcNode: 'blockpi',
            type: EndpointType.Authenticated,
            http: [`https://polygon.blockpi.network/v1/rpc/${EndpointAuth.Key}`],
            wss: [`wss://polygon.blockpi.network/v1/ws/${EndpointAuth.Key}`],
            provider: blockpi,
        },
        blockpiPublic: {
            rpcNode: 'blockpiPublic',
            type: EndpointType.Public,
            http: ['https://polygon.blockpi.network/v1/rpc/public'],
            provider: blockpi,
        },
        ankr: {
            rpcNode: 'ankr',
            type: EndpointType.Authenticated,
            http: [`https://rpc.ankr.com/polygon/${EndpointAuth.Key}`],
            provider: ankr,
        },
        ankrPublic: {
            rpcNode: 'ankrPublic',
            type: EndpointType.Public,
            http: ['https://rpc.ankr.com/polygon'],
            provider: ankr,
        },
        onfinality: {
            rpcNode: 'onfinality',
            type: EndpointType.Public,
            http: ['https://polygon.api.onfinality.io/public'],
            provider: onfinality,
        },
        onerpc: {
            rpcNode: 'onerpc',
            type: EndpointType.Authenticated,
            http: [`https://1rpc.io/${EndpointAuth.Key}/matic`],
            provider: onerpc,
        },
        onerpcPublic: {
            rpcNode: 'onerpcPublic',
            type: EndpointType.Public,
            http: ['https://1rpc.io/matic'],
            provider: onerpc,
        },
        omnia: {
            rpcNode: 'omnia',
            type: EndpointType.Authenticated,
            http: [`https://endpoints.omniatech.io/v1/matic/mainnet/${EndpointAuth.Key}`],
            wss: [`wss://endpoints.omniatech.io/v1/matic/mainnet/${EndpointAuth.Key}`],
            provider: omnia,
        },
        omniaPublic: {
            rpcNode: 'omniaPublic',
            type: EndpointType.Public,
            http: ['https://endpoints.omniatech.io/v1/matic/mainnet/public'],
            provider: omnia,
        },
        publicnode: {
            rpcNode: 'publicnode',
            type: EndpointType.Public,
            http: ['https://polygon-bor.publicnode.com'],
            provider: publicnode,
        },
        llama: {
            rpcNode: 'llama',
            type: EndpointType.Public,
            http: ['https://polygon.llamarpc.com'],
            wss: ['wss://polygon.llamarpc.com'],
            provider: llama,
        },
        polygon: {
            rpcNode: 'polygon',
            type: EndpointType.Public,
            http: ['https://polygon-rpc.com'],
            provider: polygonProvider,
        },
        public: {
            rpcNode: 'public',
            type: EndpointType.Public,
            http: ['https://polygon-rpc.com'],
            provider: polygonProvider,
        },
        default: {
            rpcNode: 'default',
            type: EndpointType.Public,
            http: ['https://polygon-rpc.com'],
            provider: polygonProvider,
        },
    },
    blockExplorers: {
        polygonscan: {
            name: 'PolygonScan',
            blockExplorer: 'polygonscan',
            type: BlockExplorerType.Etherscan,
            standard: BlockExplorerStandard.EIP3091,
            browserUrl: 'https://polygonscan.com',
            apiUrl: 'https://api.polygonscan.com/api',
            docsUrl: 'https://docs.polygonscan.com',
        },
        default: {
            name: 'PolygonScan',
            blockExplorer: 'default',
            type: BlockExplorerType.Etherscan,
            standard: BlockExplorerStandard.EIP3091,
            browserUrl: 'https://polygonscan.com',
            apiUrl: 'https://api.polygonscan.com/api',
            docsUrl: 'https://docs.polygonscan.com',
        },
    },
    contracts: {
        multicall3: {
            name: 'Multicall V3',
            contract: 'multicall3',
            address: '0xca11bde05977b3631167028862be2a173976ca11',
            deployBlock: 25770160,
            deployTxHash: '0x25d385667b12d6992742127dc7682e570136397806e2773dc47922eba0001989',
        },
    },
    testnet: false,
} as const satisfies Network
